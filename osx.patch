--- ./ext/toolchain/commands1.py	2014-10-27 15:53:52.000000000 +0900
+++ ./ext/toolchain/commands1-new.py	2014-10-28 17:51:52.000000000 +0900
@@ -451,15 +451,16 @@
 			cmake_args += ' -DCMAKE_BUILD_TYPE=' + target.capitalize()
 			
 		elif sys.platform == "darwin":
-			macSdkMatch = re.match("(\d+)\.(\d+)", self.macSdk)
-			if not macSdkMatch:
-				raise Exception("unknown osx version: " + self.macSdk)
-
 			sdkDir = self.getMacSdkDir()
 			cmake_args += " -DCMAKE_OSX_SYSROOT=" + sdkDir
 			cmake_args += " -DCMAKE_OSX_DEPLOYMENT_TARGET=" + self.macSdk
-			cmake_args += " -DOSX_TARGET_MAJOR=" + macSdkMatch.group(1)
-			cmake_args += " -DOSX_TARGET_MINOR=" + macSdkMatch.group(2)
+
+		macSdkMatch = re.match("(\d+)\.(\d+)", self.macSdk)
+		if not macSdkMatch:
+			raise Exception("unknown osx version: " + self.macSdk)
+
+		cmake_args += " -DOSX_TARGET_MAJOR=" + macSdkMatch.group(1)
+		cmake_args += " -DOSX_TARGET_MINOR=" + macSdkMatch.group(2)
 		
 		# if not visual studio, use parent dir
 		sourceDir = generator.getSourceDir()
@@ -485,10 +486,10 @@
 		if generator.cmakeName.find('Eclipse') != -1:
 			self.fixCmakeEclipseBug()
 
-		# only on osx 10.9 mavericks.
+		# only on osx 10.9 mavericks and 10.10 yosemite.
 		# manually change .xcodeproj to add code sign for
 		# synmacph project and specify its info.plist
-		if self.macSdk == "10.9" and generator.cmakeName.find('Xcode') != -1:
+		if (self.macSdk == "10.9" or self.macSdk == "10.10") and generator.cmakeName.find('Xcode') != -1:
 			self.fixXcodeProject(target)
 			
 		if err != 0:
@@ -577,7 +578,8 @@
 		if os.path.exists(sdkPath):
 			return sdkPath
 
-		return "/Developer/SDKs/" + sdkDirName + ".sdk"
+		return os.popen('xcodebuild -version -sdk macosx' + self.macSdk + ' Path').read().strip()
+		# return "/Developer/SDKs/" + sdkDirName + ".sdk"
 	
 	# http://tinyurl.com/cs2rxxb
 	def fixCmakeEclipseBug(self):

